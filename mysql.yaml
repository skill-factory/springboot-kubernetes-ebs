apiVersion: v1
kind: Secret
metadata:
  name: mysql-passwords
type: Opaque
data:
  rootPassword: a2FsQDE2MTE=
  password: a2FsQDE2MTE=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: database
spec:
  selector:
    matchLabels:
      app: mysql-server
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql-server
    spec:
      containers:
        - name: mysql-server
          image: mysql:5.7
          args:
            - "--ignore-db-dir=lost+found"
          #command: ["rm", "-r", "/var/lib/mysql/lost+found"]
          env:
            - name: MYSQL_DATABASE
              value: employee_db
            - name: MYQL_USER
              value: root
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-passwords
                  key: rootPassword
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-passwords
                  key: password
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-data-volume
      volumes:
        - name: mysql-data-volume
          awsElasticBlockStore:
            volumeID: vol-0e6ad63d9314d4da5
            fsType: ext4
          # persistentVolumeClaim:
          #   claimName: mysql-data-claim
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: mysql-data-claim
# spec:
#   storageClassName: mysql-data
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 5Gi
# ---
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: mysql-data
# provisioner: kubernetes.io/aws-ebs
# parameters:
#   type: gp2
---
apiVersion: v1
kind: Service
metadata:
  name: database
spec:
  selector:
    app: database
  ports:
    - name: mysql
      port: 3306
  type: ClusterIP
